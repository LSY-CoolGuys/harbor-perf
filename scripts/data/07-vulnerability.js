// prepare vulnerabiliies for the artifact
import { Rate } from 'k6/metrics'
import { Harbor } from 'k6/x/harbor'

import { Settings } from '../config.js'
import { retry } from '../helpers.js'

const settings = Settings()

export let successRate = new Rate('success')

export let options = {
    setupTimeout: '6h',
    duration: '24h',
    vus: 1,
    iterations: 1,
    thresholds: {
        'success': ['rate>=1'],
        'iteration_duration{scenario:default}': [
            `max>=0`,
        ],
        'iteration_duration{group:::setup}': [`max>=0`],
    }
};

const harbor = new Harbor(settings.Harbor)

export default function () {
    if (settings.ScannerURL === '') {
        console.log('SCANNER_URL is not found, skip to prepare vulnerabilities for the artifacts')
        successRate.add(true)

        return
    }

    harbor.setScannerAsDefault(harbor.createScanner({ name: `scanner-${Date.now()}`, url: settings.ScannerURL }))

    harbor.startScanAll()

    retry(() => {
        const metrics = harbor.getScanAllMetrics()
        if (metrics.ongoing) {
            throw new Error('scan all is ongoing')
        }

        successRate.add(true)
    }, { times: 1440, interval: 60 })
}
